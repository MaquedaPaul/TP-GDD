USE GD2C2023
GO
CREATE PROCEDURE AMCGDD.CREACION_TABLAS_BI AS
BEGIN

CREATE TABLE AMCGDD.BI_DIMENSION_TIEMPO(
	TIEMPO_ID NUMERIC(19,0) IDENTITY,
	ANIO INT,
	MES INT,
	CUATRIMESTRE INT,
	PRIMARY KEY (TIEMPO_ID)
)

CREATE TABLE AMCGDD.BI_DIMENSION_TIPO_MONEDA(
	MONEDA_NOMBRE NVARCHAR(100)
	PRIMARY KEY (MONEDA_NOMBRE)
)

CREATE TABLE AMCGDD.BI_DIMENSION_TIPO_OPERACION(
	TIPO_OPERACION_ID NVARCHAR(20)
	PRIMARY KEY (TIPO_OPERACION_ID)
)

CREATE TABLE AMCGDD.BI_DIMENSION_SUCURSAL(
	SUCURSAL_ID NUMERIC(19,0),
	SUCURSAL_NOMBRE NVARCHAR(100),
	PRIMARY KEY (SUCURSAL_ID)
)

CREATE TABLE AMCGDD.BI_HECHOS_CONTRATO (
	TIPO_OPERACION NVARCHAR(20),
	TIEMPO_ID NUMERIC(19,0),
	SUCURSAL_ID NUMERIC(19,0),
	GASTOS_ADMINISTRATIVOS NUMERIC(18,2), -- COMISION + GASTOS AVERIGUACION + COSTO ANUNCIO
	ANUNCIO NUMERIC(19,0),
	VIGENTE BIT -- VENTAS: 0, ALQUILERES QUE FINALIZARON: 0, ALQUILERES QUE ESTAN EN CURSO: 1
);

ALTER TABLE AMCGDD.BI_HECHOS_CONTRATO
ADD CONSTRAINT FK_BI_CONTRATO_TIPO_OPERACION
FOREIGN KEY (TIPO_OPERACION) REFERENCES AMCGDD.BI_DIMENSION_TIPO_OPERACION (TIPO_OPERACION_ID)

ALTER TABLE AMCGDD.BI_HECHOS_CONTRATO
ADD CONSTRAINT FK_BI_CONTRATO_TIEMPO
FOREIGN KEY (TIEMPO_ID) REFERENCES AMCGDD.BI_DIMENSION_TIEMPO (TIEMPO_ID)

ALTER TABLE AMCGDD.BI_HECHOS_CONTRATO
ADD CONSTRAINT FK_BI_CONTRATO_SUCURSAL
FOREIGN KEY (SUCURSAL_ID) REFERENCES AMCGDD.BI_DIMENSION_SUCURSAL (SUCURSAL_ID)

CREATE TABLE AMCGDD.BI_HECHOS_PAGO_VENTA (

	TIEMPO_ID NUMERIC(19,0),
	FECHA DATETIME,
	SUCURSAL_ID NUMERIC(19,0),
	ANUNCIO NUMERIC(19,0),
	IMPORTE_PAGADO NUMERIC(18,2),
	MONEDA_NOMBRE NVARCHAR(100) 
);

ALTER TABLE AMCGDD.BI_HECHOS_PAGO_VENTA
ADD CONSTRAINT FK_BI_PAGO_VENTA_TIPO_OPERACION
FOREIGN KEY (TIEMPO_ID) REFERENCES AMCGDD.BI_DIMENSION_TIEMPO (TIEMPO_ID)

ALTER TABLE AMCGDD.BI_HECHOS_PAGO_VENTA
ADD CONSTRAINT FK_BI_PAGO_VENTA_TIEMPO
FOREIGN KEY (MONEDA_NOMBRE) REFERENCES AMCGDD.BI_DIMENSION_TIPO_MONEDA (MONEDA_NOMBRE)

ALTER TABLE AMCGDD.BI_HECHOS_PAGO_VENTA
ADD CONSTRAINT FK_BI_PAGO_VENTA_SUCURSAL
FOREIGN KEY (SUCURSAL_ID) REFERENCES AMCGDD.BI_DIMENSION_SUCURSAL (SUCURSAL_ID)

CREATE TABLE AMCGDD.BI_HECHOS_PAGO_ALQUILER (

	TIEMPO_ID NUMERIC(19,0),
	FECHA DATETIME,
	SUCURSAL_ID NUMERIC(19,0),
	ANUNCIO NUMERIC(19,0),
	IMPORTE_PAGADO NUMERIC(18,2),
	MONEDA_NOMBRE NVARCHAR(100),
	VENCIDO BIT,
	IMPORTE_SIGUIENTE_PERIODO NUMERIC(18,2),
	HUBO_AUMENTO BIT 
);

ALTER TABLE AMCGDD.BI_HECHOS_PAGO_ALQUILER
ADD CONSTRAINT FK_BI_PAGO_ALQUILER_TIPO_OPERACION
FOREIGN KEY (TIEMPO_ID) REFERENCES AMCGDD.BI_DIMENSION_TIEMPO (TIEMPO_ID)

ALTER TABLE AMCGDD.BI_HECHOS_PAGO_ALQUILER
ADD CONSTRAINT FK_BI_PAGO_ALQUILER_TIEMPO
FOREIGN KEY (MONEDA_NOMBRE) REFERENCES AMCGDD.BI_DIMENSION_TIPO_MONEDA (MONEDA_NOMBRE)

ALTER TABLE AMCGDD.BI_HECHOS_PAGO_ALQUILER
ADD CONSTRAINT FK_BI_PAGO_ALQUILER_SUCURSAL
FOREIGN KEY (SUCURSAL_ID) REFERENCES AMCGDD.BI_DIMENSION_SUCURSAL (SUCURSAL_ID)

END
GO
CREATE PROCEDURE AMCGDD.LIMPIEZA_TABLAS AS
BEGIN
IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_HECHOS_CONTRATO')
DROP TABLE AMCGDD.BI_HECHOS_CONTRATO

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_HECHOS_PAGO_VENTA')
DROP TABLE AMCGDD.BI_HECHOS_PAGO_VENTA

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_HECHOS_PAGO_ALQUILER')
DROP TABLE AMCGDD.BI_HECHOS_PAGO_ALQUILER

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_DIMENSION_TIEMPO')
DROP TABLE AMCGDD.BI_DIMENSION_TIEMPO

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_DIMENSION_TIPO_MONEDA')
DROP TABLE AMCGDD.BI_DIMENSION_TIPO_MONEDA

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_DIMENSION_TIPO_OPERACION')
DROP TABLE AMCGDD.BI_DIMENSION_TIPO_OPERACION

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'BI_DIMENSION_SUCURSAL')
DROP TABLE AMCGDD.BI_DIMENSION_SUCURSAL
END


GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_DIM_TIEMPO')
DROP PROCEDURE AMCGDD.MIGRACION_DIM_TIEMPO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'CREACION_TABLAS_BI')
DROP PROCEDURE AMCGDD.CREACION_TABLAS_BI

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'LIMPIEZA_TABLAS')
DROP PROCEDURE AMCGDD.LIMPIEZA_TABLAS
-- MIGRACION TABLAS

EXEC AMCGDD.MIGRACION_DIMENSION_TIPO_MONEDA
EXEC AMCGDD.MIGRACION_DIMENSION_TIPO_OPERACION
EXEC AMCGDD.MIGRACION_DIMENSION_SUCURSAL
EXEC AMCGDD.MIGRACION_DIM_TIEMPO
EXEC AMCGDD.MIGRACION_DIMENSION_TIEMPO2
EXEC AMCGDD.LIMPIEZA_TABLAS
EXEC AMCGDD.CREACION_TABLAS_BI

USE GD2C2023
GO
CREATE PROCEDURE AMCGDD.MIGRACION_DIM_TIEMPO
AS
BEGIN
	DECLARE @tiempo TABLE (ANIO INT, MES INT, CUATRIMESTRE INT);

	INSERT INTO @tiempo (ANIO, MES, CUATRIMESTRE)
	SELECT DISTINCT YEAR(a.anuncio_fecha) AS ANIO,MONTH(a.anuncio_fecha) AS MES, AMCGDD.CUATRIMESTREDE(a.anuncio_fecha) AS CUATRIMESTRE
	FROM AMCGDD.ANUNCIOS a
	ORDER BY ANIO, MES, CUATRIMESTRE

	INSERT INTO @tiempo (ANIO, MES, CUATRIMESTRE)
	SELECT DISTINCT YEAR(a.pago_fecha) AS ANIO,MONTH(a.pago_fecha) AS MES, AMCGDD.CUATRIMESTREDE(a.pago_fecha) AS CUATRIMESTRE
	FROM AMCGDD.PAGO_ALQUILER a
	ORDER BY ANIO, MES, CUATRIMESTRE

	INSERT INTO @tiempo (ANIO, MES, CUATRIMESTRE)
	SELECT DISTINCT 
		YEAR(a.alquiler_fecha_inicio) AS ANIO,
		MONTH(a.alquiler_fecha_inicio) AS MES, 
		AMCGDD.CUATRIMESTREDE(a.alquiler_fecha_inicio) AS CUATRIMESTRE
	FROM AMCGDD.ALQUILER a
	ORDER BY ANIO, MES, CUATRIMESTRE

	INSERT INTO AMCGDD.BI_DIMENSION_TIEMPO
	SELECT DISTINCT * FROM @tiempo
END

SELECT * FROM AMCGDD.BI_DIMENSION_TIEMPO

-- MIGRACION HECHOS PAGO ALQUILER

GO

CREATE PROCEDURE AMCGDD.MIGRACION_BI_CONTRATO
AS
BEGIN
	-- INCLUYE TANTO ALQUILERES COMO VENTAS
	INSERT INTO AMCGDD.BI_HECHOS_CONTRATO (GASTOS_ADMINISTRATIVOS, ANUNCIO, SUCURSAL_ID, TIEMPO_ID, TIPO_OPERACION, VIGENTE)
	SELECT 
		a.alquiler_comision + a.alquiler_gastos_averiguaciones AS GASTOS_ADMINISTRATIVOS, 
		a.alquiler_anuncio AS ANUNCIO,
		ag.agente_sucursal AS SUCURSAL,
		dt.tiempo_id AS TIEMPO,
		anuncio_tipo AS TIPO_OPERACION,
		AMCGDD.SIGUE_VIGENTE(estado_id) AS VIGENTE -- SE ENTIENDE EL ESTADO "ACTIVO" COMO VIGENTE, EL RESTO COMO NO VIGENTE
	FROM AMCGDD.ALQUILER a
	JOIN AMCGDD.ANUNCIOS an
		ON a.alquiler_anuncio = an.anuncio_codigo
	JOIN AMCGDD.AGENTES ag
		ON an.anuncio_agente = ag.agente_id
	JOIN AMCGDD.ESTADO_ALQUILER e
		ON a.alquiler_estado = e.estado_id
	JOIN AMCGDD.BI_DIMENSION_TIEMPO dt
		ON YEAR(a.alquiler_fecha_inicio) = dt.ANIO
		AND MONTH(a.alquiler_fecha_inicio) = dt.MES

	INSERT INTO AMCGDD.BI_HECHOS_CONTRATO (GASTOS_ADMINISTRATIVOS, ANUNCIO, SUCURSAL_ID, TIEMPO_ID, TIPO_OPERACION, VIGENTE)
	SELECT 
		V.VENTA_COMISION AS GASTOS_ADMINISTRATIVOS,
		V.VENTA_ANUNCIO AS ANUNCIO,
		ag.agente_sucursal AS SUCURSAL,
		dt.tiempo_id AS TIEMPO,
		anuncio_tipo AS TIPO_OPERACION,
		0 AS VIGENTE -- LAS VENTAS QUEDAN TODAS COMO NO VIGENTES, PORQUE SE PAGAN DE UNA
	FROM AMCGDD.VENTA_INMUEBLE V
	JOIN AMCGDD.ANUNCIOS a
		ON a.anuncio_codigo = V.VENTA_ANUNCIO
	JOIN AMCGDD.AGENTES ag
		ON a.anuncio_agente = ag.agente_id
	JOIN AMCGDD.BI_DIMENSION_TIEMPO dt
		ON YEAR(V.VENTA_FECHA) = dt.anio
		AND MONTH(V.VENTA_FECHA) = dt.mes
END

go

CREATE FUNCTION AMCGDD.SIGUE_VIGENTE (
	@estado INT
)
RETURNS BIT
AS
BEGIN
	DECLARE @RESULTADO BIT

	IF @estado = 3
		SET @RESULTADO = 1;
	ELSE
		SET @RESULTADO = 0;
	RETURN @RESULTADO;
END

DROP FUNCTION AMCGDD.SIGUE_VIGENTE


-- cantidad m2
-- precio
-- localidad
-- tipo inmueble
-- tiempo

GO
CREATE PROCEDURE AMCGDD.MIGRACION_BI_HECHOS_PAGO_VENTA
AS
BEGIN
	SELECT 
		v.VENTA_PRECIO AS IMPORTE_VENTAS,
		ag.agente_sucursal AS SUCURSAL,
		dm.MONEDA_NOMBRE AS MONEDA,
		dt.ANIO,
		dt.MES,

		--dt.TIEMPO_ID AS TIEMPO
	FROM AMCGDD.PAGO_VENTA pv
	JOIN AMCGDD.VENTA_INMUEBLE v
		ON pv.PAGO_VENTA_VENTA = v.VENTA_CODIGO 
	JOIN AMCGDD.ANUNCIOS a
		ON v.VENTA_ANUNCIO = a.anuncio_codigo
	JOIN AMCGDD.AGENTES ag
		ON a.anuncio_agente = ag.agente_id
	JOIN AMCGDD.MONEDA m
		ON pv.PAGO_VENTA_MONEDA = m.MONEDA_CODIGO
	JOIN AMCGDD.BI_DIMENSION_TIPO_MONEDA dm
		ON m.MONEDA_NOMBRE = dm.MONEDA_NOMBRE
	JOIN AMCGDD.BI_DIMENSION_TIEMPO dt
		ON YEAR(v.VENTA_FECHA) = dt.ANIO
		AND MONTH(v.VENTA_FECHA) = dt.MES
	JOIN AMCGDD.BI_
	--GROUP BY ag.agente_sucursal, dm.MONEDA_NOMBRE, dt.ANIO, dt.MES
END

GO
CREATE PROCEDURE AMCGDD.MIGRACION_BI_HECHOS_PAGO_ALQUILER
AS
BEGIN
	
	SELECT pago_importe AS PAGO_IMPORTE_ALQUILER, ag.agente_sucursal SUCURSAL, dm.MONEDA_NOMBRE MONEDA, 
		dt.ANIO, dt.MES, pago_alquiler, ea.estado_nombre,
		 1111 AS 'IMPORTE SIGUIENTE PERIODO',
		1 AS 'HUBO AUMENTO'
	--dt.TIEMPO_ID
	FROM AMCGDD.PAGO_ALQUILER pa
	JOIN AMCGDD.ALQUILER a
		ON pa.pago_alquiler = a.alquiler_id
	JOIN AMCGDD.ANUNCIOS an
		ON a.alquiler_anuncio = an.anuncio_codigo
	JOIN AMCGDD.AGENTES ag
		ON an.anuncio_agente = ag.agente_id
	JOIN AMCGDD.IMPORTE_ALQUILER ia
		ON  a.alquiler_id = ia.importe_alquiler 
		AND pa.pago_nro_periodo >= ia.importe_periodo_inicio 
		AND pa.pago_nro_periodo < ia.importe_periodo_fin
	JOIN AMCGDD.MONEDA m
		ON ia.importe_moneda = m.MONEDA_CODIGO
	JOIN AMCGDD.BI_DIMENSION_TIPO_MONEDA dm
		ON m.MONEDA_NOMBRE = dm.MONEDA_NOMBRE
	JOIN AMCGDD.BI_DIMENSION_TIEMPO dt
		ON YEAR(pa.pago_fecha) = dt.ANIO
		AND MONTH(pa.pago_fecha) = dt.MES
	JOIN AMCGDD.ESTADO_ALQUILER ea
		ON alquiler_estado = ea.estado_id
	ORDER BY estado_nombre, pago_alquiler, ANIO, MES 
END

SELECT * FROM AMCGDD.IMPORTE_ALQUILER
SELECT * FROM AMCGDD.BI_DIMENSION_TIPO_MONEDA
SELECT * FROM AMCGDD.BI_DIMENSION_TIEMPO

SELECT * FROM AMCGDD.PAGO_ALQUILER


SELECT * FROM AMCGDD.BI_DIMENSION_TIEMPO a
ORDER BY a.anio, a.mes, a.cuatrimestre


SELECT SUM(pago_importe) AS PAGO_IMPORTE_ALQUILER, ag.agente_sucursal SUCURSAL, dm.MONEDA_NOMBRE MONEDA, 
		dt.ANIO, dt.MES
	--dt.TIEMPO_ID
	FROM AMCGDD.PAGO_ALQUILER pa
	JOIN AMCGDD.ALQUILER a
		ON pa.pago_alquiler = a.alquiler_id
	JOIN AMCGDD.ANUNCIOS an
		ON a.alquiler_anuncio = an.anuncio_codigo
	JOIN AMCGDD.AGENTES ag
		ON an.anuncio_agente = ag.agente_id
	JOIN AMCGDD.IMPORTE_ALQUILER ia
		ON  a.alquiler_id = ia.importe_alquiler 
		AND pa.pago_nro_periodo >= ia.importe_periodo_inicio 
		AND pa.pago_nro_periodo < ia.importe_periodo_fin
	JOIN AMCGDD.MONEDA m
		ON ia.importe_moneda = m.MONEDA_CODIGO
	JOIN AMCGDD.BI_DIMENSION_TIPO_MONEDA dm
		ON m.MONEDA_NOMBRE = dm.MONEDA_NOMBRE
	JOIN AMCGDD.BI_DIMENSION_TIEMPO dt
		ON YEAR(pa.pago_fecha) = dt.ANIO
		AND MONTH(pa.pago_fecha) = dt.MES
	GROUP BY dm.MONEDA_NOMBRE, ag.agente_sucursal, dt.ANIO, dt.MES
	ORDER BY ANIO, MES

SELECT ALQUILER_ESTADO, COUNT(*) 
FROM gd_esquema.Maestra 
WHERE ALQUILER_ESTADO IS NOT NULL
GROUP BY ALQUILER_ESTADO


SELECT pago_importe AS PAGO_IMPORTE_ALQUILER, ag.agente_sucursal SUCURSAL, dm.MONEDA_NOMBRE MONEDA, 
		dt.ANIO, dt.MES, pago_alquiler, ea.estado_nombre,
		 1111 AS 'IMPORTE SIGUIENTE PERIODO',
		1 AS 'HUBO AUMENTO'
	--dt.TIEMPO_ID
	FROM AMCGDD.PAGO_ALQUILER pa
	JOIN AMCGDD.ALQUILER a
		ON pa.pago_alquiler = a.alquiler_id
	JOIN AMCGDD.ANUNCIOS an
		ON a.alquiler_anuncio = an.anuncio_codigo
	JOIN AMCGDD.AGENTES ag
		ON an.anuncio_agente = ag.agente_id
	LEFT JOIN AMCGDD.IMPORTE_ALQUILER ia
		ON  a.alquiler_id = ia.importe_alquiler 
		AND pa.pago_nro_periodo >= ia.importe_periodo_inicio 
		AND pa.pago_nro_periodo < ia.importe_periodo_fin
	JOIN AMCGDD.MONEDA m
		ON ia.importe_moneda = m.MONEDA_CODIGO
	JOIN AMCGDD.BI_DIMENSION_TIPO_MONEDA dm
		ON m.MONEDA_NOMBRE = dm.MONEDA_NOMBRE
	JOIN AMCGDD.BI_DIMENSION_TIEMPO dt
		ON YEAR(pa.pago_fecha) = dt.ANIO
		AND MONTH(pa.pago_fecha) = dt.MES
	JOIN AMCGDD.ESTADO_ALQUILER ea
		ON alquiler_estado = ea.estado_id
	ORDER BY estado_nombre

SELECT a.pago_alquiler, COUNT(*) FROM AMCGDD.PAGO_ALQUILER a GROUP BY a.pago_alquiler
SELECT a.alquiler_estado, COUNT(*) FROM AMCGDD.PAGO_ALQUILER pa JOIN AMCGDD.ALQUILER a ON pa.pago_alquiler = a.alquiler_id GROUP BY a.alquiler_estado






SELECT alquiler_estado, COUNT(alquiler_estado) FROM AMCGDD.IMPORTE_ALQUILER JOIN AMCGDD.ALQUILER ON importe_alquiler = alquiler_id GROUP BY alquiler_estado

SELECT * FROM AMCGDD.PAGO_ALQUILER JOIN AMCGDD.ALQUILER ON pago_alquiler = alquiler_id WHERE alquiler_estado = 3

SELECT m.ANUNCIO_TIPO_OPERACION, ALQUILER_ESTADO, COUNT(*) FROM gd_esquema.Maestra m WHERE ALQUILER_ESTADO IS NOT NULL GROUP BY m.ANUNCIO_TIPO_OPERACION, ALQUILER_ESTADO