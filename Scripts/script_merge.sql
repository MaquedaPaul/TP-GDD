USE GD2C2023
GO

-------------------Limpiamos tablas---------------------
--Desde adentro para afuera

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'caracteristicas_inmueble')
DROP TABLE AMCGDD.CARACTERISTICAS_INMUEBLE

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'inmueble')
DROP TABLE AMCGDD.INMUEBLE

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'estado_inmueble')
DROP TABLE [AMCGDD].[ESTADO_INMUEBLE]

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'tipo')
DROP TABLE AMCGDD.TIPO

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'orientacion')
DROP TABLE AMCGDD.ORIENTACION

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'inmueble_disposicion')
DROP TABLE AMCGDD.INMUEBLE_DISPOSICION

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'inmueble_ambiente')
DROP TABLE AMCGDD.INMUEBLE_AMBIENTE

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'caracteristica')
DROP TABLE AMCGDD.CARACTERISTICA

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'sucursal')
DROP TABLE AMCGDD.SUCURSAL

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'barrio')
DROP TABLE AMCGDD.BARRIO

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'localidad')
DROP TABLE AMCGDD.LOCALIDAD

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'provincia')
DROP TABLE AMCGDD.PROVINCIA

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'PAGO_VENTA')
DROP TABLE AMCGDD.PAGO_VENTA;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'VENTA_INMUEBLE')
DROP TABLE AMCGDD.VENTA_INMUEBLE;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'COMPRADORES')
DROP TABLE AMCGDD.COMPRADORES;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'PAGO_ALQUILER')
DROP TABLE AMCGDD.PAGO_ALQUILER;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'IMPORTE_ALQUILER')
DROP TABLE AMCGDD.IMPORTE_ALQUILER;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'ALQUILER')
DROP TABLE AMCGDD.ALQUILER;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'ESTADO_ALQUILER')
DROP TABLE AMCGDD.ESTADO_ALQUILER;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'ANUNCIOS')
DROP TABLE AMCGDD.ANUNCIOS

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'ANUNCIO_TIPOS')
DROP TABLE AMCGDD.ANUNCIO_TIPOS

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'ESTADOS_ANUNCIO')
DROP TABLE AMCGDD.ESTADOS_ANUNCIO

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'PERIODO_TIPOS')
DROP TABLE AMCGDD.PERIODO_TIPOS

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'PROPIETARIOS')
DROP TABLE AMCGDD.PROPIETARIOS

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'AGENTES')
DROP TABLE AMCGDD.AGENTES

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'COMPRADORES')
DROP TABLE AMCGDD.COMPRADORES

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'INQUILINOS')
DROP TABLE AMCGDD.INQUILINOS

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'USUARIOS')
DROP TABLE AMCGDD.USUARIOS

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'MEDIO_DE_PAGO')
DROP TABLE AMCGDD.MEDIO_DE_PAGO;

IF EXISTS (SELECT name FROM sys.tables WHERE name = 'MONEDA')
DROP TABLE AMCGDD.MONEDA;

---------------------Limpiamos procedimientos---------------------
IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_ESTADO_INMUEBLE')
    DROP PROCEDURE AMCGDD.MIGRACION_ESTADO_INMUEBLE;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_TIPO')
    DROP PROCEDURE AMCGDD.MIGRACION_TIPO;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_INMUEBLE_DISPOSICION')
    DROP PROCEDURE AMCGDD.MIGRACION_INMUEBLE_DISPOSICION;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_ORIENTACION')
    DROP PROCEDURE AMCGDD.MIGRACION_ORIENTACION;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_INMUEBLE_AMBIENTE')
    DROP PROCEDURE AMCGDD.MIGRACION_INMUEBLE_AMBIENTE;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_CARACTERISTICA')
    DROP PROCEDURE AMCGDD.MIGRACION_CARACTERISTICA;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_INMUEBLE')
    DROP PROCEDURE AMCGDD.MIGRACION_INMUEBLE;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_PROVINCIA')
    DROP PROCEDURE AMCGDD.MIGRACION_PROVINCIA;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_LOCALIDAD')
    DROP PROCEDURE AMCGDD.MIGRACION_LOCALIDAD;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_BARRIO')
    DROP PROCEDURE AMCGDD.MIGRACION_BARRIO;
GO

IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_SUCURSAL')
    DROP PROCEDURE AMCGDD.MIGRACION_SUCURSAL;
GO


IF EXISTS(SELECT [name] FROM sys.procedures WHERE [name] = 'MIGRACION_CARACTERISTICAS_INMUEBLE')
    DROP PROCEDURE AMCGDD.MIGRACION_CARACTERISTICAS_INMUEBLE;
GO

IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_MEDIOS_DE_PAGO')
    DROP PROCEDURE AMCGDD.MIGRACION_MEDIOS_DE_PAGO;
GO

IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_MONEDAS')
    DROP PROCEDURE AMCGDD.MIGRACION_MONEDAS;
GO

IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_VENTA_INMUEBLES')
    DROP PROCEDURE AMCGDD.MIGRACION_VENTA_INMUEBLES;
GO

IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_PAGO_VENTA_INMUEBLES')
    DROP PROCEDURE AMCGDD.MIGRACION_PAGO_VENTA_INMUEBLES;
GO


IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_USUARIOS')
DROP PROCEDURE AMCGDD.MIGRACION_USUARIOS

IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_SUBTIPOS_USUARIO')
DROP PROCEDURE AMCGDD.MIGRACION_SUBTIPOS_USUARIO

IF EXISTS (SELECT name FROM sys.procedures WHERE name = 'MIGRACION_ANUNCIOS')
DROP PROCEDURE AMCGDD.MIGRACION_ANUNCIOS

IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_ALQUILER')
    DROP PROCEDURE AMCGDD.MIGRACION_ALQUILER;
GO

IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_IMPORTE_ALQUILER')
    DROP PROCEDURE AMCGDD.MIGRACION_IMPORTE_ALQUILER;
GO
IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_ESTADO_ALQUILER')
    DROP PROCEDURE AMCGDD.MIGRACION_ESTADO_ALQUILER;
GO
IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_PAGO_ALQUILER')
    DROP PROCEDURE AMCGDD.MIGRACION_PAGO_ALQUILER;

IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_USUARIOS')
DROP PROCEDURE AMCGDD.MIGRACION_USUARIOS;

IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_SUBTIPOS_USUARIO')
DROP PROCEDURE AMCGDD.MIGRACION_SUBTIPOS_USUARIO;

IF EXISTS(SELECT name FROM sys.procedures WHERE name = 'MIGRACION_ANUNCIOS')
DROP PROCEDURE AMCGDD.MIGRACION_ANUNCIOS;
---------------------Limpiamos funciones---------------------

IF EXISTS(SELECT [name] FROM sys.objects WHERE [name] = 'OBTENER_ID_MONEDA')
DROP FUNCTION AMCGDD.OBTENER_ID_MONEDA
GO


IF EXISTS(SELECT [name] FROM sys.objects WHERE [name] = 'ID_COMPRADOR')
DROP FUNCTION AMCGDD.ID_COMPRADOR
GO

IF EXISTS (SELECT name FROM sys.all_objects s WHERE name = 'FORMATO_TIPO_PERIODO' AND s.type='FN')
DROP FUNCTION AMCGDD.FORMATO_TIPO_PERIODO
IF EXISTS (SELECT name FROM sys.all_objects s WHERE name = 'FORMATO_ANUNCIO_TIPO' AND s.type='FN')
DROP FUNCTION AMCGDD.FORMATO_ANUNCIO_TIPO

IF EXISTS(SELECT [name] FROM sys.objects WHERE [name] = 'ID_INQUILINO')
DROP FUNCTION AMCGDD.ID_INQUILINO
GO
IF EXISTS(SELECT [name] FROM sys.objects WHERE [name] = 'ID_PROPIETARIO')
DROP FUNCTION AMCGDD.ID_PROPIETARIO
GO

---------------------Limpiamos el esquema---------------------
IF EXISTS (SELECT name FROM sys.schemas WHERE name = 'AMCGDD')
BEGIN
	DROP SCHEMA AMCGDD
END
GO


---------------------Creamos el esquema---------------------

CREATE SCHEMA AMCGDD;
GO

----------------Creamos las tablas sin PK ni FK, pero aclarando cu√°les son PK y FK------------------





------------------------------------MONEDA------------------------------------
CREATE TABLE AMCGDD.MONEDA (
    MONEDA_CODIGO NUMERIC(19,0) IDENTITY(1,1) PRIMARY KEY,
    MONEDA_NOMBRE NVARCHAR(100)
);

------------------------------------MEDIO DE PAGO------------------------------------
CREATE TABLE AMCGDD.MEDIO_DE_PAGO (
    MEDIO_DE_PAGO_ID NUMERIC(19,0) IDENTITY(1,1) PRIMARY KEY,
    MEDIO_DE_PAGO_NOMBRE NVARCHAR(100)
);

------------------------------------VENTA INMUEBLE------------------------------------
CREATE TABLE AMCGDD.VENTA_INMUEBLE (
    VENTA_CODIGO NUMERIC(19,0),
    VENTA_ANUNCIO NUMERIC(19,0),
    VENTA_COMPRADOR NUMERIC(19,0),
    VENTA_FECHA DATETIME,
    VENTA_PRECIO NUMERIC(18,2),
    VENTA_COMISION NUMERIC(18,2),
    VENTA_MONEDA NUMERIC(19,0),
    PRIMARY KEY (VENTA_CODIGO)
    --FOREIGN KEY (VENTA_ANUNCIO) REFERENCES AMCGDD.ANUNCIO(ANUNCIO_CODIGO),
    --FOREIGN KEY (VENTA_COMPRADOR) REFERENCES AMCGDD.COMPRADOR(COMPRADOR_ID),
    --FOREIGN KEY (VENTA_MONEDA) REFERENCES AMCGDD.MONEDA(MONEDA_CODIGO)
);

------------------------------------PAGO VENTA------------------------------------
CREATE TABLE AMCGDD.PAGO_VENTA (
    PAGO_VENTA_CODIGO NUMERIC(19,0) IDENTITY(1,1) PRIMARY KEY,
    PAGO_VENTA_VENTA NUMERIC(19,0),
    PAGO_VENTA_COTIZACION_MONEDA NUMERIC(18,2),
    PAGO_VENTA_MONEDA NUMERIC(19,0),
    PAGO_VENTA_MEDIO_DE_PAGO NUMERIC(19,0),
    PAGO_VENTA_IMPORTE NUMERIC(18,2)
    --FOREIGN KEY (PAGO_VENTA_VENTA) REFERENCES AMCGDD.VENTA_INMUEBLE(VENTA_CODIGO),
    --FOREIGN KEY (PAGO_VENTA_MONEDA) REFERENCES AMCGDD.MONEDA(MONEDA_CODIGO),
    --FOREIGN KEY (PAGO_VENTA_MEDIO_DE_PAGO) REFERENCES AMCGDD.MEDIO_DE_PAGO(MEDIO_DE_PAGO_ID)
);


CREATE TABLE AMCGDD.USUARIOS (
	usuario_id numeric(19,0) PRIMARY KEY NOT NULL IDENTITY(1,1),
	usuario_nombre nvarchar(100) NOT NULL,
	usuario_apellido nvarchar(100) NOT NULL,
	usuario_fecha_nac datetime not null,
	usuario_mail nvarchar(100) NOT NULL,
	usuario_telefono numeric(18,0) not null,
	usuario_dni numeric(18,0) not null,
	usuario_fecha_registro datetime not null
);

CREATE TABLE AMCGDD.PROPIETARIOS (
	propietario_id numeric(19,0) PRIMARY KEY NOT NULL IDENTITY(1,1),
	propietario_usuario numeric(19,0) NOT NULL
);

CREATE TABLE AMCGDD.AGENTES (
	agente_id numeric(19,0) PRIMARY KEY NOT NULL IDENTITY(1,1),
	agente_usuario numeric(19,0) NOT NULL,
	agente_sucursal numeric(19,0) not null
);

CREATE TABLE AMCGDD.COMPRADORES (
	comprador_id numeric(19,0) PRIMARY KEY NOT NULL IDENTITY(1,1),
	comprador_usuario numeric(19,0) NOT NULL
);

CREATE TABLE AMCGDD.INQUILINOS (
	inquilino_id numeric(19,0) PRIMARY KEY NOT NULL IDENTITY(1,1),
	inquilino_usuario numeric(19,0) NOT NULL
);


/*============================== ANUNCIOS ==============================*/

CREATE TABLE AMCGDD.ESTADOS_ANUNCIO ( 
	estado_nombre NVARCHAR(100) PRIMARY KEY NOT NULL
);

CREATE TABLE AMCGDD.PERIODO_TIPOS (
	periodo_nombre NVARCHAR(100) PRIMARY KEY NOT NULL
);

CREATE TABLE AMCGDD.ANUNCIO_TIPOS (
	anuncio_tipo_nombre NVARCHAR(100) PRIMARY KEY NOT NULL
);

CREATE TABLE AMCGDD.ANUNCIOS (
	anuncio_codigo NUMERIC(19,0) PRIMARY KEY NOT NULL,
	anuncio_fecha datetime NOT NULL,
	anuncio_agente NUMERIC(19,0) NOT NULL,
	anuncio_tipo NVARCHAR(100) NOT NULL,
	anuncio_inmueble NUMERIC(19,0) NOT NULL,
	anuncio_precio NUMERIC(18,2) NOT NULL,
	anuncio_moneda NUMERIC(19,0) NOT NULL,
	anuncio_periodo_tipo NVARCHAR(100) NOT NULL,
	anuncio_finalizacion DATETIME NOT NULL,
	anuncio_costo_publicacion NUMERIC(18,2) NOT NULL,
	anuncio_estado NVARCHAR(100) NOT NULL,
);


---------------------VENTA INMUEBLE---------------------
-- ANUNCIO VENTA INMUEBLE
ALTER TABLE AMCGDD.VENTA_INMUEBLE
ADD CONSTRAINT FK_ANUNCIO_VENTA
FOREIGN KEY (VENTA_ANUNCIO) REFERENCES AMCGDD.ANUNCIOS;

-- COMPRADOR VENTA INMUEBLE
ALTER TABLE AMCGDD.VENTA_INMUEBLE
ADD CONSTRAINT FK_COMPRADOR_VENTA
FOREIGN KEY (VENTA_COMPRADOR) REFERENCES AMCGDD.COMPRADORES;

-- MONEDA VENTA INMUEBLE
ALTER TABLE AMCGDD.VENTA_INMUEBLE
ADD CONSTRAINT FK_MONEDA_VENTA
FOREIGN KEY (VENTA_MONEDA) REFERENCES AMCGDD.MONEDA;

CREATE TABLE AMCGDD.ESTADO_INMUEBLE (
    ESTADO_ID NUMERIC(18,0) IDENTITY(1,1) NOT NULL,
    ESTADO_NOMBRE NVARCHAR(100),
    PRIMARY KEY (ESTADO_ID)
);

CREATE TABLE AMCGDD.TIPO (
    TIPO_ID NUMERIC(18,0) IDENTITY(1,1) NOT NULL,
    NOMBRE NVARCHAR(100),
    PRIMARY KEY (TIPO_ID)
);


CREATE TABLE AMCGDD.ORIENTACION (
    ORIENTACION_ID NUMERIC(18,0) IDENTITY(1,1) NOT NULL,
    NOMBRE_COORDENADA NVARCHAR(100),
    PRIMARY KEY (orientacion_id)
);

CREATE TABLE AMCGDD.INMUEBLE_DISPOSICION (
    DISPOSICION_ID NUMERIC(18,0) IDENTITY(1,1) NOT NULL,
    NOMBRE NVARCHAR(100),
    PRIMARY KEY (disposicion_id)
);

CREATE TABLE AMCGDD.INMUEBLE_AMBIENTE ( 
    AMBIENTE_ID NUMERIC(18,0) IDENTITY(1,1) NOT NULL,
    nombre NVARCHAR(100),
    PRIMARY KEY (AMBIENTE_ID)
);


CREATE TABLE AMCGDD.CARACTERISTICA (
    CARACTERISTICA_ID numeric(18,0) IDENTITY(1,1) NOT NULL,
    NOMBRE NVARCHAR(100),
    PRIMARY KEY (CARACTERISTICA_ID)
);

CREATE TABLE AMCGDD.PROVINCIA (
    PROVINCIA_ID NUMERIC(19,0) IDENTITY(1,1) NOT NULL,
    PROVINCIA_NOMBRE NVARCHAR(100),
    PRIMARY KEY (PROVINCIA_ID)
);

CREATE TABLE AMCGDD.LOCALIDAD (
    LOCALIDAD_ID NUMERIC(19,0) IDENTITY(1,1) NOT NULL,
    LOCALIDAD_NOMBRE NVARCHAR(100),
	LOCALIDAD_PROVINCIA_ID NUMERIC(19,0),--FK
    PRIMARY KEY (LOCALIDAD_ID)
);

CREATE TABLE AMCGDD.BARRIO (
    BARRIO_ID NUMERIC(19,0) IDENTITY(1,1) NOT NULL,
    BARRIO_NOMBRE NVARCHAR(100),
	BARRIO_LOCALIDAD_ID NUMERIC(19,0),--FK
    PRIMARY KEY (BARRIO_ID)
);


CREATE TABLE AMCGDD.INMUEBLE (
INMUEBLE_ID NUMERIC(18,0)  NOT NULL, --PK
NOMBRE NVARCHAR(100),
DESCRIPCION NVARCHAR(100),
ANTIGUEDAD NUMERIC(18,0),
EXPENSAS NUMERIC(18,2),
AMBIENTE_ID NUMERIC(18,0),--FK
CANTIDAD_AMBIENTES NVARCHAR(100),
SUPERFICIE_TOTAL NUMERIC(18,2),
DIRECCION NVARCHAR(100),

ESTADO_ID NUMERIC(18,0) NOT NULL, --FK
TIPO_ID NUMERIC(18,0) NOT NULL,--FK
ORIENTACION_ID NUMERIC(18,0) NOT NULL,--FK
DISPOSICION_ID NUMERIC(18,0) NOT NULL,--FK
BARRIO_ID NUMERIC(19,0) NOT NULL,--FK
PROPIETARIO_ID NUMERIC(19,0), --FK
PRIMARY KEY (INMUEBLE_ID)--FK
);

CREATE TABLE AMCGDD.CARACTERISTICAS_INMUEBLE (
INMUEBLE_ID NUMERIC(18,0) NOT NULL, --FK
CARACTERISTICA_ID numeric(18,0) NOT NULL, --FK
);

-------------------------- SUCURSAL ----------------------------------------------------
CREATE TABLE AMCGDD.SUCURSAL (
    SUCURSAL_ID NUMERIC(18,0) NOT NULL,
    SUCURSAL_NOMBRE NVARCHAR(100),
	SUCURSAL_DIRECCION NVARCHAR(100),
	SUCURSAL_TELEFONO NVARCHAR(100),

	SUCURSAL_LOCALIDAD_ID NUMERIC(19,0), --FK
    PRIMARY KEY (SUCURSAL_ID)
);

CREATE TABLE AMCGDD.ALQUILER(
	alquiler_id NUMERIC(19,0) NOT NULL,
	alquiler_anuncio NUMERIC(19,0) NOT NULL,
	alquiler_inquilino NUMERIC(19,0),
	alquiler_fecha_inicio DATETIME,
	alquiler_fecha_fin DATETIME,
	alquiler_duracion NUMERIC(19,0),
	alquiler_deposito NUMERIC(18,2),
	alquiler_comision NUMERIC(18,2),
	alquiler_gastos_averiguaciones NUMERIC(18,2),
	alquiler_estado NUMERIC(19,0)
	PRIMARY KEY(alquiler_id)
	--FOREIGN KEY (alquiler_anuncio) REFERENCES AMCGDD.Anuncio(anuncio_codigo),
    --FOREIGN KEY (alquiler_inquilino) REFERENCES AMCGDD.Inquilino(inquilino_id),
    --FOREIGN KEY (alquiler_estado) REFERENCES AMCGDD.Alquiler_estado(estado_id) 
	);

CREATE TABLE AMCGDD.IMPORTE_ALQUILER(
	importe_id NUMERIC(19,0) IDENTITY(1,1),
	importe_alquiler NUMERIC(19,0) NOT NULL,
	importe_periodo_inicio NUMERIC(19,0),
	importe_periodo_fin NUMERIC(19,0),
	importe_precio NUMERIC(18,2),
	importe_moneda	NUMERIC(18,2) NOT NULL
	PRIMARY KEY(importe_id)
	--FOREIGN KEY (importe_alquiler) REFERENCES AMCGDD.Alquiler(alquiler_id)
	);

CREATE TABLE AMCGDD.ESTADO_ALQUILER(
	estado_id NUMERIC(19,0) IDENTITY (1,1),
	estado_nombre NVARCHAR(100)
	PRIMARY KEY(estado_id)
	);

CREATE TABLE AMCGDD.PAGO_ALQUILER(
	pago_codigo NUMERIC(19,0),
	pago_alquiler NUMERIC(19,0) NOT NULL,
	pago_alquiler_descripcion NVARCHAR(100),
	pago_fecha DATETIME,
	pago_nro_periodo NUMERIC(19,0),
	pago_inicio_periodo DATETIME,
	pago_fin_periodo DATETIME,
	pago_importe NUMERIC(19,0),
	pago_medio_pago NUMERIC(19,0),
	pago_fecha_vencimiento DATETIME,
	PRIMARY KEY(pago_codigo)
	--FOREIGN KEY (pago_alquiler) REFERENCES AMCGDD.Alquiler(alquiler_id),
    --FOREIGN KEY (pago_importe) REFERENCES AMCGDD.Importe_alquiler(importe_id),
    --FOREIGN KEY (pago_medio_pago) REFERENCES AMCGDD.Medio_de_pago(medio_de_pago_id)
	);

ALTER TABLE AMCGDD.ALQUILER
ADD CONSTRAINT fk_anuncio_alquiler
FOREIGN KEY (alquiler_anuncio) REFERENCES AMCGDD.ANUNCIOS(anuncio_codigo)

ALTER TABLE AMCGDD.ALQUILER
ADD CONSTRAINT fk_inquilino_alquiler
FOREIGN KEY (alquiler_inquilino) REFERENCES AMCGDD.INQUILINOS(inquilino_id)

ALTER TABLE AMCGDD.ALQUILER
ADD CONSTRAINT fk_estado_alquiler
FOREIGN KEY (alquiler_estado) REFERENCES AMCGDD.ESTADO_ALQUILER(estado_id)

ALTER TABLE AMCGDD.IMPORTE_ALQUILER
ADD CONSTRAINT fk_alquiler_importe
FOREIGN KEY (importe_alquiler) REFERENCES AMCGDD.ALQUILER(alquiler_id)

ALTER TABLE AMCGDD.PAGO_ALQUILER
ADD CONSTRAINT fk_alquiler_pago
FOREIGN KEY (pago_alquiler) REFERENCES AMCGDD.ALQUILER (alquiler_id)

ALTER TABLE AMCGDD.PAGO_ALQUILER
ADD CONSTRAINT fk_importe_pago
FOREIGN KEY (pago_importe) REFERENCES AMCGDD.IMPORTE_ALQUILER(importe_id)

ALTER TABLE AMCGDD.PAGO_ALQUILER
ADD CONSTRAINT fk_medio_pago_pago
FOREIGN KEY (pago_medio_pago) REFERENCES AMCGDD.MEDIO_DE_PAGO(MEDIO_DE_PAGO_ID)



ALTER TABLE AMCGDD.PROPIETARIOS
ADD CONSTRAINT fk_propietario_usuario FOREIGN KEY (propietario_usuario) 
REFERENCES AMCGDD.USUARIOS (usuario_id)

ALTER TABLE AMCGDD.AGENTES
ADD CONSTRAINT fk_agente_usuario FOREIGN KEY (agente_usuario) 
REFERENCES AMCGDD.USUARIOS (usuario_id)

ALTER TABLE AMCGDD.COMPRADORES
ADD CONSTRAINT fk_comprador_usuario FOREIGN KEY (comprador_usuario) 
REFERENCES AMCGDD.USUARIOS (usuario_id)

ALTER TABLE AMCGDD.INQUILINOS
ADD CONSTRAINT fk_inquilino_usuario FOREIGN KEY (inquilino_usuario) 
REFERENCES AMCGDD.USUARIOS (usuario_id)

---------------------------------------------------- Se agrega FKs----------------------------------

--------------------INMUEBLE----------------------

ALTER TABLE AMCGDD.LOCALIDAD
ADD CONSTRAINT FK_PROVINCIA_ID
FOREIGN KEY (LOCALIDAD_PROVINCIA_ID) REFERENCES AMCGDD.LOCALIDAD

ALTER TABLE AMCGDD.BARRIO
ADD CONSTRAINT FK_LOCALIDAD_ID
FOREIGN KEY (BARRIO_LOCALIDAD_ID) REFERENCES AMCGDD.BARRIO
GO

ALTER TABLE AMCGDD.INMUEBLE
ADD CONSTRAINT FK_ESTADO_INMUEBLE
FOREIGN KEY (ESTADO_ID) REFERENCES AMCGDD.ESTADO_INMUEBLE

ALTER TABLE AMCGDD.INMUEBLE
ADD CONSTRAINT FK_TIPO_AMBIENTE
FOREIGN KEY (TIPO_ID) REFERENCES AMCGDD.TIPO

ALTER TABLE AMCGDD.INMUEBLE
ADD CONSTRAINT FK_ORIENTACION_INMUEBLE
FOREIGN KEY (ORIENTACION_ID) REFERENCES AMCGDD.ORIENTACION

ALTER TABLE AMCGDD.INMUEBLE
ADD CONSTRAINT FK_DISPOSICION_INMUEBLE
FOREIGN KEY (DISPOSICION_ID) REFERENCES AMCGDD.INMUEBLE_DISPOSICION

ALTER TABLE AMCGDD.INMUEBLE
ADD CONSTRAINT FK_AMBIENTE
FOREIGN KEY (AMBIENTE_ID) REFERENCES AMCGDD.INMUEBLE_AMBIENTE

ALTER TABLE AMCGDD.INMUEBLE
ADD CONSTRAINT FK_BARRIO_ID
FOREIGN KEY (BARRIO_ID) REFERENCES AMCGDD.BARRIO

ALTER TABLE AMCGDD.INMUEBLE-------------PROP
ADD CONSTRAINT FK_INMUEBLE_PROPIETARIO
FOREIGN KEY (PROPIETARIO_ID) REFERENCES AMCGDD.PROPIETARIOS (propietario_id)

ALTER TABLE AMCGDD.CARACTERISTICAS_INMUEBLE
ADD CONSTRAINT FK_CARACTERISTICA_INMUEBLE
FOREIGN KEY (CARACTERISTICA_ID) REFERENCES AMCGDD.CARACTERISTICA

ALTER TABLE AMCGDD.CARACTERISTICAS_INMUEBLE
ADD CONSTRAINT FK_INMUEBLE_ID
FOREIGN KEY (INMUEBLE_ID) REFERENCES AMCGDD.INMUEBLE
GO

---------------------SUCURSAL----------------------------------

ALTER TABLE AMCGDD.SUCURSAL
ADD CONSTRAINT FK_LOCALIDAD_CODIGO
FOREIGN KEY (SUCURSAL_LOCALIDAD_ID) REFERENCES AMCGDD.LOCALIDAD
GO


---------------------PAGO VENTA---------------------
-- VENTA PAGO VENTA
ALTER TABLE AMCGDD.PAGO_VENTA
ADD CONSTRAINT FK_VENTA_PAGO_VENTA
FOREIGN KEY (PAGO_VENTA_VENTA) REFERENCES AMCGDD.VENTA_INMUEBLE;

-- MONEDA PAGO VENTA
ALTER TABLE AMCGDD.PAGO_VENTA
ADD CONSTRAINT FK_MONEDA_PAGO_VENTA
FOREIGN KEY (PAGO_VENTA_MONEDA) REFERENCES AMCGDD.MONEDA;

-- MEDIO DE PAGO PAGO VENTA
ALTER TABLE AMCGDD.PAGO_VENTA
ADD CONSTRAINT FK_MEDIO_PAGO_PAGO_VENTA
FOREIGN KEY (PAGO_VENTA_MEDIO_DE_PAGO) REFERENCES AMCGDD.MEDIO_DE_PAGO;


ALTER TABLE AMCGDD.ANUNCIOS
ADD CONSTRAINT fk_anuncio_agente FOREIGN KEY (anuncio_agente) 
REFERENCES AMCGDD.AGENTES (agente_id)

ALTER TABLE AMCGDD.ANUNCIOS
ADD CONSTRAINT fk_anuncio_tipo FOREIGN KEY (anuncio_tipo) 
REFERENCES AMCGDD.ANUNCIO_TIPOS (anuncio_tipo_nombre)

ALTER TABLE AMCGDD.ANUNCIOS
ADD CONSTRAINT fk_anuncio_periodo FOREIGN KEY (anuncio_periodo_tipo) 
REFERENCES AMCGDD.PERIODO_TIPOS (periodo_nombre)

ALTER TABLE AMCGDD.ANUNCIOS
ADD CONSTRAINT fk_anuncio_estado FOREIGN KEY (anuncio_estado) 
REFERENCES AMCGDD.ESTADOS_ANUNCIO (estado_nombre)


--/-------------------FUNCIONES----------------------------/--
GO
CREATE FUNCTION AMCGDD.OBTENER_ID_MONEDA (@nombreMoneda NVARCHAR(100))
RETURNS INT
AS
BEGIN
    DECLARE @monedaID INT;
    SELECT @monedaID = moneda_codigo FROM AMCGDD.MONEDA WHERE MONEDA_NOMBRE = @nombreMoneda;
    RETURN ISNULL(@monedaID, -1); -- Devuelve -1 si no se encuentra la moneda
END;


go
CREATE FUNCTION AMCGDD.FORMATO_TIPO_PERIODO(@periodo NVARCHAR(100))
RETURNS NVARCHAR(100)
AS
BEGIN
    DECLARE @result NVARCHAR(100);
    
    IF @periodo = '0'
        SET @result = '-';
    ELSE
        SET @result = RTRIM(LTRIM(UPPER(SUBSTRING(@periodo, 9, 100))));
    
    RETURN @result;
END;


go
CREATE FUNCTION AMCGDD.FORMATO_ANUNCIO_TIPO(@tipo NVARCHAR(100))
RETURNS NVARCHAR(100)
AS
BEGIN
    DECLARE @result NVARCHAR(100);
    
    SET @result = RTRIM(LTRIM(UPPER(SUBSTRING(@tipo, 15, 100))));
   
    RETURN @result;
END;

/*============================== FIN FUNCIONES DE FORMATO ==============================*/

/*============================== FUNCIONES DE OBTENCION ==============================*/
GO
CREATE FUNCTION AMCGDD.ID_INQUILINO(@dni NUMERIC(19,0))
RETURNS NUMERIC(19,0)
AS
BEGIN
	RETURN (
		SELECT TOP 1 inquilino_id FROM
		AMCGDD.INQUILINOS i
		JOIN AMCGDD.USUARIOS  u
		ON i.inquilino_usuario = u.usuario_id
		WHERE u.usuario_dni = @dni
	);
END

GO
CREATE FUNCTION AMCGDD.ID_COMPRADOR(@dni NUMERIC(19,0))
RETURNS NUMERIC(19,0)
AS
BEGIN
	RETURN (
		SELECT TOP 1 comprador_id FROM
		AMCGDD.COMPRADORES c
		JOIN AMCGDD.USUARIOS  u
		ON c.comprador_usuario = u.usuario_id
		WHERE u.usuario_dni = @dni
	);
END

GO
CREATE FUNCTION AMCGDD.ID_PROPIETARIO(@dni NUMERIC(19,0))
RETURNS NUMERIC(19,0)
AS
BEGIN
	RETURN (
		SELECT TOP 1 propietario_id FROM
		AMCGDD.PROPIETARIOS p
		JOIN AMCGDD.USUARIOS  u
		ON p.propietario_usuario = u.usuario_id
		WHERE u.usuario_dni = @dni
	);
END



--/-------------------MIGRACION DE DATOS-------------------/--


GO
----------------------MEDIOS DE PAGO--------------------------
CREATE PROCEDURE AMCGDD.MIGRACION_MEDIOS_DE_PAGO
AS
BEGIN
    PRINT '**MIGRACION** MEDIOS DE PAGO';
    INSERT INTO AMCGDD.MEDIO_DE_PAGO (MEDIO_DE_PAGO_NOMBRE)
    SELECT DISTINCT PAGO_VENTA_MEDIO_PAGO FROM GD_ESQUEMA.MAESTRA
    WHERE PAGO_VENTA_MEDIO_PAGO IS NOT NULL;
END;
GO

---------------------MONEDAS---------------------
CREATE PROCEDURE AMCGDD.MIGRACION_MONEDAS
AS
BEGIN
    PRINT 'MIGRACION MONEDAS';
    INSERT INTO AMCGDD.MONEDA (MONEDA_NOMBRE)
    SELECT DISTINCT
    CONCAT(UPPER(LEFT(SUBSTRING(ANUNCIO_MONEDA, 8, LEN(ANUNCIO_MONEDA) - 7),1)),LOWER(SUBSTRING(ANUNCIO_MONEDA, 9, LEN(ANUNCIO_MONEDA) - 1)))
    FROM GD_ESQUEMA.MAESTRA;
END;
GO
/*
INSERT INTO AMCGDD.VENTA_INMUEBLE(VENTA_CODIGO, VENTA_COMISION, VENTA_FECHA, VENTA_MONEDA, VENTA_PRECIO)
SELECT DISTINCT VENTA_CODIGO, VENTA_COMISION, VENTA_FECHA, VENTA_MONEDA, VENTA_PRECIO_VENTA FROM GD_ESQUEMA.MAESTRA
WHERE VENTA_CODIGO IS NOT NULL
*/
GO
CREATE PROCEDURE AMCGDD.MIGRACION_VENTA_INMUEBLES
AS
BEGIN
    PRINT 'MIGRACION VENTA INMUEBLES';
    INSERT INTO AMCGDD.VENTA_INMUEBLE (
    VENTA_COMPRADOR,
    VENTA_ANUNCIO,
    VENTA_CODIGO, 
    VENTA_COMISION, 
    VENTA_FECHA, 
    VENTA_MONEDA, 
    VENTA_PRECIO)
    SELECT DISTINCT
    C.comprador_id,
    ANUNCIO_CODIGO,
    VENTA_CODIGO, 
    VENTA_COMISION, 
    VENTA_FECHA, 
    MON.MONEDA_CODIGO, 
    VENTA_PRECIO_VENTA
    FROM GD_ESQUEMA.MAESTRA M
    INNER JOIN AMCGDD.MONEDA MON ON MONEDA_NOMBRE = SUBSTRING(UPPER(VENTA_MONEDA), CHARINDEX(' ', VENTA_MONEDA) + 1,LEN(VENTA_MONEDA) - CHARINDEX(' ', VENTA_MONEDA))
    INNER JOIN AMCGDD.USUARIOS U ON M.COMPRADOR_NOMBRE = UPPER(LTRIM(RTRIM(usuario_nombre))) 
    AND  M.COMPRADOR_APELLIDO = UPPER(LTRIM(RTRIM(usuario_apellido))) AND M.COMPRADOR_DNI = usuario_dni
    INNER JOIN AMCGDD.COMPRADORES C ON usuario_id = comprador_usuario 
    WHERE VENTA_CODIGO IS NOT NULL;
END;
GO 
GO
CREATE PROCEDURE AMCGDD.MIGRACION_PAGO_VENTA_INMUEBLES
AS
BEGIN
    PRINT 'MIGRACION PAGO VENTA INMUEBLES';
    INSERT INTO AMCGDD.PAGO_VENTA (
    PAGO_VENTA_VENTA, 
    PAGO_VENTA_COTIZACION_MONEDA, 
    PAGO_VENTA_IMPORTE,
    PAGO_VENTA_MEDIO_DE_PAGO,
     PAGO_VENTA_MONEDA)
    SELECT VENTA_CODIGO, PAGO_VENTA_COTIZACION, PAGO_VENTA_IMPORTE,
           (SELECT TOP 1 MEDIO_DE_PAGO_ID FROM AMCGDD.MEDIO_DE_PAGO WHERE MEDIO_DE_PAGO_NOMBRE = PAGO_VENTA_MEDIO_PAGO) AS 'MEDIO PAGO',
           (SELECT TOP 1 MONEDA_CODIGO FROM AMCGDD.MONEDA 
           WHERE UPPER(MONEDA_NOMBRE) = SUBSTRING(UPPER(PAGO_VENTA_MONEDA), CHARINDEX(' ', PAGO_VENTA_MONEDA) + 1,LEN(PAGO_VENTA_MONEDA) - CHARINDEX(' ', PAGO_VENTA_MONEDA))) AS 'MONEDA'
    FROM GD_ESQUEMA.MAESTRA
    WHERE VENTA_CODIGO IS NOT NULL;
END;
GO
GO

CREATE PROCEDURE AMCGDD.MIGRACION_USUARIOS 
AS
	BEGIN

		/* MIGRACION INQUILINOS (12842 FILAS)*/

		INSERT INTO AMCGDD.USUARIOS (
			usuario_nombre, 
			usuario_apellido, 
			usuario_dni, 
			usuario_mail, 
			usuario_fecha_nac, 
			usuario_fecha_registro,
			usuario_telefono) 

		SELECT DISTINCT 
			RTRIM(LTRIM(INQUILINO_NOMBRE)),
			RTRIM(LTRIM(UPPER(INQUILINO_APELLIDO))), 
			RTRIM(LTRIM(INQUILINO_DNI)), 
			RTRIM(LTRIM(INQUILINO_MAIL)), 
			INQUILINO_FECHA_NAC, 
			INQUILINO_FECHA_REGISTRO, 
			RTRIM(LTRIM(INQUILINO_TELEFONO)) 
		FROM gd_esquema.Maestra
		WHERE INQUILINO_NOMBRE IS NOT NULL;

		PRINT '**MIGRACION** USUARIOS INQUILINOS AGREGADOS'

		/* MIGRACION AGENTES (3 FILAS)*/

		INSERT INTO AMCGDD.USUARIOS (
			usuario_nombre, 
			usuario_apellido, 
			usuario_dni, 
			usuario_mail, 
			usuario_fecha_nac, 
			usuario_fecha_registro,
			usuario_telefono) 

		SELECT DISTINCT 
			RTRIM(LTRIM(AGENTE_NOMBRE)),
			RTRIM(LTRIM(UPPER(AGENTE_APELLIDO))), 
			RTRIM(LTRIM(AGENTE_DNI)), 
			RTRIM(LTRIM(AGENTE_MAIL)), 
			RTRIM(LTRIM(AGENTE_FECHA_NAC)), 
			RTRIM(LTRIM(AGENTE_FECHA_REGISTRO)), 
			RTRIM(LTRIM(AGENTE_TELEFONO))
		FROM gd_esquema.Maestra
		WHERE AGENTE_NOMBRE IS NOT NULL

		PRINT '**MIGRACION** USUARIOS AGENTES AGREGADOS'

		/* MIGRACION COMPRADORES (4058 FILAS) */

		INSERT INTO AMCGDD.USUARIOS (
			usuario_nombre, 
			usuario_apellido, 
			usuario_dni, 
			usuario_mail, 
			usuario_fecha_nac, 
			usuario_fecha_registro,
			usuario_telefono) 
 

		SELECT DISTINCT 
			RTRIM(LTRIM(COMPRADOR_NOMBRE)),
			RTRIM(LTRIM(UPPER(COMPRADOR_APELLIDO))), 
			RTRIM(LTRIM(COMPRADOR_DNI)), 
			RTRIM(LTRIM(COMPRADOR_MAIL)), 
			RTRIM(LTRIM(COMPRADOR_FECHA_NAC)), 
			RTRIM(LTRIM(COMPRADOR_FECHA_REGISTRO)), 
			RTRIM(LTRIM(COMPRADOR_TELEFONO))
		FROM gd_esquema.Maestra
		WHERE COMPRADOR_NOMBRE IS NOT NULL
			AND NOT EXISTS (
				SELECT * 
				FROM AMCGDD.USUARIOS 
				WHERE RTRIM(LTRIM(UPPER(usuario_nombre))) = RTRIM(LTRIM(UPPER(COMPRADOR_NOMBRE))) 
					AND RTRIM(LTRIM(UPPER(usuario_apellido))) = RTRIM(LTRIM(UPPER(COMPRADOR_APELLIDO))) 
					AND usuario_dni = COMPRADOR_DNI
				)

		PRINT '**MIGRACION** USUARIOS COMPRADORES AGREGADOS'
	
		/* MIGRACION PROPIETARIOS (8152 FILAS) */
		INSERT INTO AMCGDD.USUARIOS (
			usuario_nombre, 
			usuario_apellido, 
			usuario_dni, 
			usuario_mail, 
			usuario_fecha_nac, 
			usuario_fecha_registro,
			usuario_telefono) 


		SELECT DISTINCT 
			RTRIM(LTRIM(PROPIETARIO_NOMBRE)),
			RTRIM(LTRIM(UPPER(PROPIETARIO_APELLIDO))), 
			RTRIM(LTRIM(PROPIETARIO_DNI)), 
			RTRIM(LTRIM(PROPIETARIO_MAIL)), 
			RTRIM(LTRIM(PROPIETARIO_FECHA_NAC)), 
			RTRIM(LTRIM(PROPIETARIO_FECHA_REGISTRO)), 
			RTRIM(LTRIM(PROPIETARIO_TELEFONO))
		FROM gd_esquema.Maestra
		WHERE PROPIETARIO_NOMBRE IS NOT NULL
			AND NOT EXISTS (
				SELECT * 
				FROM AMCGDD.USUARIOS 
				WHERE RTRIM(LTRIM(UPPER(usuario_nombre))) = RTRIM(LTRIM(UPPER(PROPIETARIO_NOMBRE))) 
					AND RTRIM(LTRIM(UPPER(usuario_apellido))) = RTRIM(LTRIM(UPPER(PROPIETARIO_APELLIDO))) 
					AND usuario_dni = PROPIETARIO_DNI
				)
		PRINT '**MIGRACION** USUARIOS PROPIETARIOS AGREGADOS'
END

GO

CREATE PROCEDURE AMCGDD.MIGRACION_SUBTIPOS_USUARIO
AS
BEGIN

	INSERT INTO AMCGDD.AGENTES

	SELECT DISTINCT usuario_id, SUCURSAL_CODIGO FROM 
	gd_esquema.Maestra m JOIN
	AMCGDD.USUARIOS u
	ON m.AGENTE_NOMBRE = u.usuario_nombre
	AND m.AGENTE_APELLIDO = u.usuario_apellido
	AND m.AGENTE_DNI = u.usuario_dni
	WHERE AGENTE_NOMBRE IS NOT NULL
	PRINT '**MIGRACION** AGENTES AGREGADOS'

	INSERT INTO AMCGDD.PROPIETARIOS

	SELECT DISTINCT usuario_id FROM 
	gd_esquema.Maestra m JOIN
	AMCGDD.USUARIOS u
	ON m.PROPIETARIO_NOMBRE = u.usuario_nombre
	AND m.PROPIETARIO_APELLIDO = u.usuario_apellido
	AND m.PROPIETARIO_DNI = u.usuario_dni
	AND m.PROPIETARIO_NOMBRE IS NOT NULL

	PRINT '**MIGRACION** PROPIETARIOS AGREGADOS'

	INSERT INTO AMCGDD.INQUILINOS

	SELECT DISTINCT usuario_id FROM 
	gd_esquema.Maestra m JOIN
	AMCGDD.USUARIOS u
	ON m.INQUILINO_NOMBRE = u.usuario_nombre
	AND m.INQUILINO_APELLIDO = u.usuario_apellido
	AND m.INQUILINO_DNI = u.usuario_dni
	AND m.INQUILINO_NOMBRE IS NOT NULL

	PRINT '**MIGRACION** INQUILINOS AGREGADOS'

	INSERT INTO AMCGDD.COMPRADORES

	SELECT DISTINCT usuario_id FROM 
	gd_esquema.Maestra m JOIN
	AMCGDD.USUARIOS u
	ON m.COMPRADOR_NOMBRE = u.usuario_nombre
	AND m.COMPRADOR_APELLIDO = u.usuario_apellido
	AND m.COMPRADOR_DNI = u.usuario_dni
	AND m.COMPRADOR_NOMBRE IS NOT NULL

	PRINT '**MIGRACION** COMPRADORES AGREGADOS'
END
GO

GO

CREATE PROCEDURE AMCGDD.MIGRACION_ANUNCIOS
AS
BEGIN

	/* MIGRACION ESTADOS ANUNCIO */

	INSERT INTO AMCGDD.ESTADOS_ANUNCIO

	SELECT DISTINCT RTRIM(LTRIM(UPPER(m.ANUNCIO_ESTADO)))
	FROM gd_esquema.Maestra m
	WHERE m.ANUNCIO_ESTADO IS NOT NULL

	PRINT '**MIGRACION** ESTADOS DE ANUNCIO AGREGADOS'
	/* MIGRACION PERIODOS*/

	INSERT INTO AMCGDD.PERIODO_TIPOS

	SELECT DISTINCT AMCGDD.FORMATO_TIPO_PERIODO(g.ANUNCIO_TIPO_PERIODO)
	FROM gd_esquema.Maestra g
	WHERE g.ANUNCIO_TIPO_PERIODO IS NOT NULL

	PRINT '**MIGRACION** PERIODOS AGREGADOS'
	/* MIGRACION TIPOS DE ANUNCIO */

	INSERT INTO AMCGDD.ANUNCIO_TIPOS

	SELECT DISTINCT AMCGDD.FORMATO_ANUNCIO_TIPO(g.ANUNCIO_TIPO_OPERACION)
	FROM gd_esquema.Maestra g
	WHERE ANUNCIO_TIPO_OPERACION IS NOT NULL
	
	PRINT '**MIGRACION** TIPOS DE ANUNCIO AGREGADOS'
	/* MIGRACION ANUNCIOS */

	INSERT INTO AMCGDD.ANUNCIOS

	SELECT 
		ANUNCIO_CODIGO, 
		ANUNCIO_FECHA_PUBLICACION, 
		agente_id, 
		AMCGDD.FORMATO_ANUNCIO_TIPO(ANUNCIO_TIPO_OPERACION), 
		INMUEBLE_CODIGO, 
		ANUNCIO_PRECIO_PUBLICADO, 
		MONEDA_CODIGO, 
		AMCGDD.FORMATO_TIPO_PERIODO(ANUNCIO_TIPO_PERIODO), 
		ANUNCIO_FECHA_FINALIZACION,
		ANUNCIO_COSTO_ANUNCIO,
		RTRIM(LTRIM(UPPER(ANUNCIO_ESTADO)))
	FROM AMCGDD.AGENTES a
	JOIN AMCGDD.USUARIOS u
		ON a.agente_usuario = u.usuario_id
	JOIN gd_esquema.Maestra g
		ON g.AGENTE_NOMBRE = usuario_nombre
			AND AGENTE_APELLIDO = usuario_apellido
			AND AGENTE_DNI = usuario_dni
	JOIN AMCGDD.MONEDA m 
	ON m.MONEDA_NOMBRE =  SUBSTRING(UPPER(ANUNCIO_MONEDA), CHARINDEX(' ', ANUNCIO_MONEDA) + 1,LEN(ANUNCIO_MONEDA) - CHARINDEX(' ', ANUNCIO_MONEDA))
	WHERE INMUEBLE_CODIGO IS NOT NULL
	PRINT '**MIGRACION** ANUNCIOS AGREGADOS'
END

GO
CREATE PROCEDURE AMCGDD.MIGRACION_ESTADO_INMUEBLE
 AS
  BEGIN
	PRINT '**MIGRACION** ESTADO_INMUEBLE'
    INSERT INTO estado_inmueble(estado_nombre)
		SELECT DISTINCT Maestra.INMUEBLE_ESTADO
		FROM gd_esquema.Maestra 
		WHERE INMUEBLE_ESTADO IS NOT NULL
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_TIPO
 AS
  BEGIN
	PRINT '**MIGRACION** TIPO'
    INSERT INTO TIPO(NOMBRE)
		SELECT DISTINCT Maestra.INMUEBLE_TIPO_INMUEBLE as NOMBRE
		FROM gd_esquema.Maestra
		WHERE INMUEBLE_TIPO_INMUEBLE IS NOT NULL
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_ORIENTACION
 AS
  BEGIN
	PRINT '**MIGRACION** ORIENTACION'
    INSERT INTO ORIENTACION(NOMBRE_COORDENADA)
		SELECT DISTINCT Maestra.INMUEBLE_ORIENTACION 
		FROM gd_esquema.Maestra
		WHERE INMUEBLE_ORIENTACION IS NOT NULL
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_INMUEBLE_DISPOSICION
 AS
  BEGIN
	PRINT '**MIGRACION** INMBUEBLE_DISPOSICION'
    INSERT INTO INMUEBLE_DISPOSICION(NOMBRE)
		SELECT DISTINCT Maestra.INMUEBLE_DISPOSICION 
		FROM gd_esquema.Maestra
		WHERE INMUEBLE_DISPOSICION IS NOT NULL
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_INMUEBLE_AMBIENTE
 AS
  BEGIN
	PRINT '**MIGRACION** AMBIENTE'
   INSERT INTO INMUEBLE_AMBIENTE(NOMBRE)
   VALUES
        ('Ambiente'),
        ('Ambiente con dependencia'),
        ('Monoambiente');
  END
GO


CREATE PROCEDURE AMCGDD.MIGRACION_CARACTERISTICA
AS
BEGIN
    PRINT '**MIGRACION** CARACTERISTICA'

    INSERT INTO CARACTERISTICA (NOMBRE)
    SELECT 
        RIGHT(NOMBRE, CHARINDEX('_', REVERSE(NOMBRE)) - 1) AS NOMBRE
    FROM (
        SELECT 'INMUEBLE_CARACTERISTICA_CALEFACCION' AS NOMBRE
        UNION ALL
        SELECT 'INMUEBLE_CARACTERISTICA_GAS'
        UNION ALL
        SELECT 'INMUEBLE_CARACTERISTICA_WIFI'
		UNION ALL
        SELECT 'INMUEBLE_CARACTERISTICA_CABLE'
    ) AS Subquery
END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_PROVINCIA
 AS
  BEGIN
	PRINT '**MIGRACION** PROVINCIA'
    INSERT INTO PROVINCIA(PROVINCIA_NOMBRE)
		SELECT DISTINCT Maestra.INMUEBLE_PROVINCIA as PROVINCIA_NOMBRE
		FROM gd_esquema.Maestra
		WHERE INMUEBLE_PROVINCIA IS NOT NULL
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_LOCALIDAD
AS
BEGIN
    PRINT '**MIGRACION** LOCALIDAD'

    INSERT INTO LOCALIDAD (LOCALIDAD_NOMBRE, LOCALIDAD_PROVINCIA_ID) 
    SELECT DISTINCT Maestra.INMUEBLE_LOCALIDAD AS LOCALIDAD_NOMBRE,
           (SELECT TOP 1 PROVINCIA_ID FROM AMCGDD.PROVINCIA WHERE PROVINCIA.PROVINCIA_NOMBRE = Maestra.INMUEBLE_PROVINCIA) AS LOCALIDAD_PROVINCIA_ID
    FROM gd_esquema.Maestra
    WHERE INMUEBLE_LOCALIDAD IS NOT NULL AND NOT EXISTS (SELECT 1 FROM AMCGDD.LOCALIDAD WHERE LOCALIDAD_NOMBRE = Maestra.INMUEBLE_LOCALIDAD);

	INSERT INTO LOCALIDAD (LOCALIDAD_NOMBRE, LOCALIDAD_PROVINCIA_ID) 
    SELECT DISTINCT SUCURSAL_LOCALIDAD AS LOCALIDAD_NOMBRE,
           (SELECT TOP 1 PROVINCIA_ID FROM AMCGDD.PROVINCIA WHERE PROVINCIA.PROVINCIA_NOMBRE = Maestra.SUCURSAL_PROVINCIA) AS LOCALIDAD_PROVINCIA_ID
    FROM gd_esquema.Maestra
    WHERE SUCURSAL_LOCALIDAD IS NOT NULL
     AND NOT EXISTS (SELECT 1 FROM AMCGDD.LOCALIDAD WHERE LOCALIDAD_NOMBRE = Maestra.SUCURSAL_LOCALIDAD);
END
GO


CREATE PROCEDURE AMCGDD.MIGRACION_BARRIO
AS
BEGIN
    PRINT '**MIGRACION** BARRIO'

    INSERT INTO BARRIO(BARRIO_NOMBRE, BARRIO_LOCALIDAD_ID) 
    SELECT DISTINCT Maestra.INMUEBLE_BARRIO AS BARRIO_NOMBRE,
           (SELECT TOP 1 LOCALIDAD_ID FROM AMCGDD.LOCALIDAD WHERE LOCALIDAD.LOCALIDAD_NOMBRE = Maestra.INMUEBLE_LOCALIDAD) AS BARRIO_LOCALIDAD_ID
    FROM gd_esquema.Maestra
    WHERE INMUEBLE_BARRIO IS NOT NULL AND NOT EXISTS (SELECT 1 FROM AMCGDD.BARRIO WHERE BARRIO_NOMBRE = Maestra.INMUEBLE_BARRIO);
END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_INMUEBLE
AS
  BEGIN
	PRINT '**MIGRACION** INMUEBLE'
    INSERT INTO INMUEBLE(INMUEBLE_ID, NOMBRE, DESCRIPCION, ANTIGUEDAD, EXPENSAS,AMBIENTE_ID, CANTIDAD_AMBIENTES, SUPERFICIE_TOTAL, DIRECCION, 
	ESTADO_ID,TIPO_ID, ORIENTACION_ID, DISPOSICION_ID, BARRIO_ID, PROPIETARIO_ID)
		SELECT DISTINCT INMUEBLE_CODIGO AS INMUEBLE_ID,
		INMUEBLE_NOMBRE AS NOMBRE,
		INMUEBLE_DESCRIPCION AS DESCRIPCION,
		INMUEBLE_ANTIGUEDAD AS ANTIGUEDAD,
		INMUEBLE_EXPESAS AS EXPENSAS,
		CASE
			WHEN CHARINDEX('ambientes', INMUEBLE_CANT_AMBIENTES) > 0 THEN --Verifica si en la columna esta la palanra ambientes
				CASE
					WHEN CHARINDEX('con dependencia', INMUEBLE_CANT_AMBIENTES) > 0 THEN --si es asi, verifica si tiene 'con dependencia'
					(SELECT TOP 1 AMBIENTE_ID FROM AMCGDD.INMUEBLE_AMBIENTE WHERE NOMBRE = 'Ambiente con dependencia')
				ELSE
					(SELECT TOP 1 AMBIENTE_ID FROM AMCGDD.INMUEBLE_AMBIENTE WHERE NOMBRE = 'Ambiente')
				END
			WHEN INMUEBLE_CANT_AMBIENTES = 'Monoambiente' THEN
				(SELECT TOP 1 AMBIENTE_ID FROM AMCGDD.INMUEBLE_AMBIENTE WHERE NOMBRE = 'Monoambiente')
			ELSE
				NULL
		END AS AMBIENTE_ID,
		CASE
            WHEN CHARINDEX('ambientes', INMUEBLE_CANT_AMBIENTES) > 0 THEN 
				SUBSTRING(INMUEBLE_CANT_AMBIENTES, 1, CHARINDEX('ambientes', INMUEBLE_CANT_AMBIENTES) - 1)
            WHEN INMUEBLE_CANT_AMBIENTES = 'Monoambiente' THEN '1'
			WHEN INMUEBLE_CANT_AMBIENTES = 'Ambiente' THEN (SELECT TOP 1 AMBIENTE_ID FROM AMCGDD.INMUEBLE_AMBIENTE WHERE NOMBRE = 'Ambiente')
            WHEN INMUEBLE_CANT_AMBIENTES = 'Ambiente con dependencia' THEN (SELECT TOP 1 AMBIENTE_ID FROM AMCGDD.INMUEBLE_AMBIENTE WHERE NOMBRE = 'Ambiente con dependencia')
            ELSE NULL
        END AS CANTIDAD_AMBIENTES,
		INMUEBLE_SUPERFICIETOTAL AS SUPERFICIE_TOTAL,
		INMUEBLE_DIRECCION AS DIRECCION,
		(SELECT ESTADO_INMUEBLE.ESTADO_ID FROM AMCGDD.ESTADO_INMUEBLE WHERE ESTADO_INMUEBLE.ESTADO_NOMBRE = INMUEBLE_ESTADO) AS ID_ESTADO,
		(SELECT TIPO.TIPO_ID FROM AMCGDD.TIPO WHERE TIPO.NOMBRE = INMUEBLE_TIPO_INMUEBLE) AS TIPO_ID,
		(SELECT ORIENTACION.ORIENTACION_ID FROM AMCGDD.ORIENTACION WHERE ORIENTACION.NOMBRE_COORDENADA = INMUEBLE_ORIENTACION) AS ORIENTACION_ID,
		(SELECT INMUEBLE_DISPOSICION.DISPOSICION_ID FROM AMCGDD.INMUEBLE_DISPOSICION WHERE INMUEBLE_DISPOSICION.NOMBRE = INMUEBLE_DISPOSICION) AS DISPOSICION_ID,
		(SELECT TOP 1 BARRIO.BARRIO_ID FROM AMCGDD.BARRIO WHERE BARRIO.BARRIO_NOMBRE = INMUEBLE_BARRIO) AS BARRIO_ID, propietario_id
		
		FROM gd_esquema.Maestra
		JOIN AMCGDD.USUARIOS u
		 ON u.usuario_dni = PROPIETARIO_DNI
           AND u.usuario_nombre = RTRIM(LTRIM(UPPER(PROPIETARIO_NOMBRE)))
           AND u.usuario_apellido = RTRIM(LTRIM(UPPER(PROPIETARIO_APELLIDO)))
		JOIN AMCGDD.PROPIETARIOS p
		ON p.propietario_usuario = u.usuario_id
		WHERE INMUEBLE_CODIGO IS NOT NULL AND NOT EXISTS (SELECT 1 FROM AMCGDD.INMUEBLE WHERE INMUEBLE.INMUEBLE_ID = INMUEBLE_CODIGO) --si me devuelve una fila, osea 1 es porque ya existe 
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_CARACTERISTICAS_INMUEBLE
AS
BEGIN
    PRINT '**MIGRACION** CARACTERISTICAS_INMUEBLE'

    INSERT INTO CARACTERISTICAS_INMUEBLE (INMUEBLE_ID, CARACTERISTICA_ID)
    SELECT DISTINCT INMUEBLE_CODIGO AS INMUEBLE_ID,
        (SELECT CARACTERISTICA_ID FROM AMCGDD.CARACTERISTICA WHERE NOMBRE = 'WIFI')
    FROM gd_esquema.Maestra
    WHERE INMUEBLE_CODIGO IS NOT NULL AND INMUEBLE_CARACTERISTICA_WIFI = 1;

    INSERT INTO CARACTERISTICAS_INMUEBLE (INMUEBLE_ID, CARACTERISTICA_ID)
    SELECT DISTINCT INMUEBLE_CODIGO AS INMUEBLE_ID,
        (SELECT CARACTERISTICA_ID FROM AMCGDD.CARACTERISTICA WHERE NOMBRE = 'CABLE')
    FROM gd_esquema.Maestra
    WHERE INMUEBLE_CODIGO IS NOT NULL AND INMUEBLE_CARACTERISTICA_CABLE = 1;

    INSERT INTO CARACTERISTICAS_INMUEBLE (INMUEBLE_ID, CARACTERISTICA_ID)
    SELECT DISTINCT INMUEBLE_CODIGO AS INMUEBLE_ID,
        (SELECT CARACTERISTICA_ID FROM AMCGDD.CARACTERISTICA WHERE NOMBRE = 'CALEFACCION')
    FROM gd_esquema.Maestra
    WHERE INMUEBLE_CODIGO IS NOT NULL AND INMUEBLE_CARACTERISTICA_CALEFACCION = 1;

    INSERT INTO CARACTERISTICAS_INMUEBLE (INMUEBLE_ID, CARACTERISTICA_ID)
    SELECT DISTINCT INMUEBLE_CODIGO AS INMUEBLE_ID,
        (SELECT CARACTERISTICA_ID FROM AMCGDD.CARACTERISTICA WHERE NOMBRE = 'GAS')
    FROM gd_esquema.Maestra
    WHERE INMUEBLE_CODIGO IS NOT NULL AND INMUEBLE_CARACTERISTICA_GAS = 1;

END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_SUCURSAL
 AS
  BEGIN
	PRINT '**MIGRACION** SUCURSAL'
    INSERT INTO SUCURSAL(SUCURSAL_ID, SUCURSAL_NOMBRE,SUCURSAL_DIRECCION, SUCURSAL_TELEFONO, SUCURSAL_LOCALIDAD_ID)
		SELECT DISTINCT SUCURSAL_CODIGO AS SUCURSAL_ID,
		SUCURSAL_NOMBRE AS SUCURSAL_NOMBRE,
		SUCURSAL_DIRECCION AS SUCURSAL_DIRECCION,
		SUCURSAL_TELEFONO AS SUCURSAL_TELEFONO,
		(sELECT TOP 1 LOCALIDAD_ID FROM AMCGDD.LOCALIDAD WHERE LOCALIDAD.LOCALIDAD_NOMBRE = SUCURSAL_LOCALIDAD) 
		FROM gd_esquema.Maestra
		WHERE SUCURSAL_CODIGO IS NOT null
  END
GO

CREATE PROCEDURE AMCGDD.MIGRACION_ESTADO_ALQUILER
 AS
  BEGIN
	PRINT '**MIGRACION** Estado Alquiler'
		INSERT INTO AMCGDD.Estado_alquiler(estado_nombre)
		SELECT DISTINCT ALQUILER_ESTADO  FROM gd_esquema.Maestra
		WHERE ALQUILER_ESTADO IS NOT NULL
  END

GO
CREATE PROCEDURE AMCGDD.MIGRACION_ALQUILER
AS
	BEGIN
		PRINT '**MIGRACION** Alquiler'
		INSERT INTO AMCGDD.Alquiler(Alquiler_id, alquiler_anuncio, alquiler_fecha_inicio, alquiler_fecha_fin, alquiler_duracion, 
			alquiler_deposito, alquiler_comision, alquiler_gastos_averiguaciones, alquiler_inquilino, alquiler_estado)
		SELECT DISTINCT ALQUILER_CODIGO, ANUNCIO_CODIGO, ALQUILER_FECHA_INICIO, ALQUILER_FECHA_FIN, ALQUILER_CANT_PERIODOS,
            		ALQUILER_DEPOSITO, ALQUILER_COMISION, ALQUILER_GASTOS_AVERIGUA, inquilino_usuario, estado_id
        	FROM gd_esquema.Maestra 
        	JOIN AMCGDD.USUARIOS u
       		ON u.usuario_dni = INQUILINO_DNI
            		AND    u.usuario_nombre = RTRIM(LTRIM(UPPER(INQUILINO_NOMBRE)))
            		AND    u.usuario_apellido = RTRIM(LTRIM(UPPER(INQUILINO_APELLIDO)))
        	JOIN AMCGDD.INQUILINOS i
        	ON i.inquilino_usuario = u.usuario_id
        	JOIN AMCGDD.ESTADO_ALQUILER e
        	ON e.estado_nombre = ALQUILER_ESTADO
        	WHERE ALQUILER_CODIGO IS NOT NULL
	END

GO
CREATE PROCEDURE AMCGDD.MIGRACION_IMPORTE_ALQUILER
AS
	BEGIN
		PRINT '**MIGRACION** Importe Alquiler'
		INSERT INTO AMCGDD.Importe_alquiler(Importe_alquiler, importe_periodo_inicio, importe_periodo_fin, importe_precio, importe_moneda)
		SELECT DISTINCT ALQUILER_CODIGO, DETALLE_ALQ_NRO_PERIODO_INI, DETALLE_ALQ_NRO_PERIODO_FIN, DETALLE_ALQ_PRECIO, m.MONEDA_CODIGO
        	FROM gd_esquema.Maestra g
        	JOIN AMCGDD.MONEDA m
        	ON g.ANUNCIO_MONEDA = m.MONEDA_NOMBRE
        	WHERE DETALLE_ALQ_NRO_PERIODO_INI is not null 
	END

GO
CREATE PROCEDURE AMCGDD.MIGRACION_PAGO_ALQUILER
AS
	BEGIN
		PRINT '**MIGRACION** Pago Alquiler'
		INSERT INTO AMCGDD.Pago_alquiler(pago_alquiler, pago_codigo, pago_fecha, pago_inicio_periodo, pago_fin_periodo, pago_alquiler_descripcion,
			pago_nro_periodo, pago_medio_pago, pago_importe, pago_fecha_vencimiento)
		SELECT ALQUILER_CODIGO, PAGO_ALQUILER_CODIGO, PAGO_ALQUILER_FECHA, 
			PAGO_ALQUILER_FEC_INI, PAGO_ALQUILER_FEC_FIN, SUBSTRING(PAGO_ALQUILER_DESC, 23, LEN(PAGO_ALQUILER_DESC) - 22),
                	PAGO_ALQUILER_NRO_PERIODO, m.MEDIO_DE_PAGO_ID, PAGO_ALQUILER_IMPORTE, PAGO_ALQUILER_FECHA_VENCIMIENTO 
            	FROM gd_esquema.Maestra
				JOIN AMCGDD.MEDIO_DE_PAGO m
				ON m.MEDIO_DE_PAGO_NOMBRE = PAGO_ALQUILER_MEDIO_PAGO
            	WHERE PAGO_ALQUILER_CODIGO IS NOT NULL
	END
GO

GO

USE GD2C2023

select * from AMCGDD.USUARIOS

SELECT * FROM AMCGDD.AGENTES

SELECT * FROM AMCGDD.ANUNCIOS

SELECT * FROM AMCGDD.MONEDA

EXEC AMCGDD.MIGRACION_USUARIOS
EXEC AMCGDD.MIGRACION_SUBTIPOS_USUARIO
EXEC AMCGDD.MIGRACION_MONEDAS;
EXEC AMCGDD.MIGRACION_MEDIOS_DE_PAGO;
EXEC AMCGDD.MIGRACION_ANUNCIOS
EXEC AMCGDD.MIGRACION_VENTA_INMUEBLES;
EXEC AMCGDD.MIGRACION_PAGO_VENTA_INMUEBLES;
EXEC AMCGDD.MIGRACION_ESTADO_INMUEBLE
EXEC AMCGDD.MIGRACION_TIPO
EXEC AMCGDD.MIGRACION_ORIENTACION
EXEC AMCGDD.MIGRACION_INMUEBLE_DISPOSICION
EXEC AMCGDD.MIGRACION_INMUEBLE_AMBIENTE
EXEC AMCGDD.MIGRACION_CARACTERISTICA
EXEC AMCGDD.MIGRACION_PROVINCIA
EXEC AMCGDD.MIGRACION_LOCALIDAD
EXEC AMCGDD.MIGRACION_BARRIO
EXEC AMCGDD.MIGRACION_INMUEBLE
EXEC AMCGDD.MIGRACION_CARACTERISTICAS_INMUEBLE
EXEC AMCGDD.MIGRACION_SUCURSAL
EXEC AMCGDD.MIGRACION_ESTADO_ALQUILER
EXEC AMCGDD.MIGRACION_ALQUILER
EXEC AMCGDD.MIGRACION_IMPORTE_ALQUILER
EXEC AMCGDD.MIGRACION_PAGO_ALQUILER